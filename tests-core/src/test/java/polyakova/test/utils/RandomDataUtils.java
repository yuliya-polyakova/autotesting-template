package polyakova.test.utils;

import java.security.SecureRandom;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Random;

/**
 * Вспомогательные методы генерации данных
 *
 * @author Iuliia Poliakova
 */
public class RandomDataUtils {
    /**
     * ОГРН (основной государственный регистрационный номер) состоит из 13 цифр:
     * <p>
     * 1-я цифра — признак отнесения государственного регистрационного номера записи:
     * к основному государственному регистрационному номеру (ОГРН) — 1, 5;
     * к основному государственному регистрационному номеру индивидуального предпринимателя (ОГРНИП) — 3;
     * к государственному регистрационному номеру — 2, 6, 7, 8, 9 (для ЕГРЮЛ), 4 (для ЕГРИП);
     * 2-3-я цифры — две последние цифры года внесения записи;
     * 4-5-я цифры — код субъекта Российской Федерации;
     * 6-12-я цифры — номер записи, внесенной в государственный реестр в течение года;
     * 13-я цифра — контрольное число.
     * Маски ввода
     * XXXXXXXXXXXXX — маска ввода без разделителей.
     * X-XX-XX-XXXXXXX-X — маска ввода с разделителями.
     *
     * @return
     */
    public static String randomOgrn() {
        Random random = new Random();
        String result = "";
        result += random.nextInt(9) + 1;
        for (int i = 11; i > 0; i--) {
            result += random.nextInt(10);
        }
        int n13 = (int) (Long.parseLong(result) % 11 % 10);
        result += n13;
        return result;
    }

    /**
     * ИНН (идентификационный номер налогоплательщика) физического лица из 12 цифр:
     * <p>
     * 1-4-я цифры:
     * для российской организации — код налогового органа, который присвоил ИНН;
     * для иностранной организации — индекс, определяемый Федеральной налоговой службой;
     * 5-9-я цифры:
     * для российской организации — порядковый номер записи о лице в территориальном разделе Единого государственного реестра налогоплательщиков налогового органа, который присвоил ИНН;
     * для иностранной организации — код иностранной организации (КИО) согласно Справочнику «Коды иностранных организаций»;
     * 10-я цифра — контрольное число.
     * ИНН физического лица (индивидуального предпринимателя) состоит из 12 цифр:
     * <p>
     * 1-4-я цифры — код налогового органа, который присвоил ИНН;
     * 5-10-я цифры — порядковый номер записи о лице в территориальном разделе Единого государственного реестра налогоплательщиков налогового органа, который присвоил ИНН;
     * 11-12-я цифры — контрольное число.
     * <p>
     * Алгоритм проверки контрольного числа
     * 12-значный ИНН
     * Вычислить 1-ю контрольную цифру:
     * Вычислить сумму произведений цифр ИНН (с 1-й по 10-ю) на следующие коэффициенты — 7, 2, 4, 10, 3, 5, 9, 4, 6, 8 (т.е. 7 * ИНН[1] + 2 * ИНН[2] + ...).
     * Вычислить младший разряд остатка от деления полученной суммы на 11.
     * Вычислить 2-ю контрольную цифру:
     * Вычислить сумму произведений цифр ИНН (с 1-й по 11-ю) на следующие коэффициенты — 3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8 (т.е. 3 * ИНН[1] + 7 * ИНН[2] + ...).
     * Вычислить младший разряд остатка от деления полученной суммы на 11.
     * Сравнить 1-ю контрольную цифру с 11-й цифрой ИНН и сравнить 2-ю контрольную цифру с 12-й цифрой ИНН. Если они равны, то ИНН верный.
     *
     * @return
     */
    public static String randomINNFiz() {
        Random random = new Random();
        String result = "";
        int r = random.nextInt(10);
        int s1 = r * 7;
        int s2 = r * 3;
        result += r;
        r = random.nextInt(10);
        s1 += r * 2;
        s2 += r * 7;
        result += r;
        r = random.nextInt(10);
        s1 += r * 4;
        s2 += r * 2;
        result += r;
        r = random.nextInt(10);
        s1 += r * 10;
        s2 += r * 4;
        result += r;
        r = random.nextInt(10);
        s1 += r * 3;
        s2 += r * 10;
        result += r;
        r = random.nextInt(10);
        s1 += r * 5;
        s2 += r * 3;
        result += r;
        r = random.nextInt(10);
        s1 += r * 9;
        s2 += r * 5;
        result += r;
        r = random.nextInt(10);
        s1 += r * 4;
        s2 += r * 9;
        result += r;
        r = random.nextInt(10);
        s1 += r * 6;
        s2 += r * 4;
        result += r;
        r = random.nextInt(10);
        s1 += r * 8;
        s2 += r * 6;
        result += r;
        r = s1 % 11 % 10;
        s2 += r * 8;
        result += r;
        r = s2 % 11 % 10;
        result += r;

        return result;
    }

    /**
     * ИНН (идентификационный номер налогоплательщика) организации состоит из 10 цифр:
     * <p>
     * 1-4-я цифры:
     * для российской организации — код налогового органа, который присвоил ИНН;
     * для иностранной организации — индекс, определяемый Федеральной налоговой службой;
     * 5-9-я цифры:
     * для российской организации — порядковый номер записи о лице в территориальном разделе Единого государственного реестра налогоплательщиков налогового органа, который присвоил ИНН;
     * для иностранной организации — код иностранной организации (КИО) согласно Справочнику «Коды иностранных организаций»;
     * 10-я цифра — контрольное число.
     * <p>
     * Алгоритм проверки контрольного числа
     * 10-значный ИНН
     * Вычислить сумму произведений цифр ИНН (с 1-й по 9-ю) на следующие коэффициенты — 2, 4, 10, 3, 5, 9, 4, 6, 8 (т.е. 2 * ИНН[1] + 4 * ИНН[2] + ...).
     * Вычислить остаток от деления полученной суммы на 11.
     * Сравнить младший разряд полученного остатка от деления с младшим разрядом ИНН. Если они равны, то ИНН верный.
     *
     * @return
     */
    public static String randomINN() {
        Random random = new Random();
        String result = "";
        int r = random.nextInt(10);
        int s1 = r * 2;
        result += r;
        r = random.nextInt(10);
        s1 += r * 4;
        result += r;
        r = random.nextInt(10);
        s1 += r * 10;
        result += r;
        r = random.nextInt(10);
        s1 += r * 3;
        result += r;
        r = random.nextInt(10);
        s1 += r * 5;
        result += r;
        r = random.nextInt(10);
        s1 += r * 9;
        result += r;
        r = random.nextInt(10);
        s1 += r * 4;
        result += r;
        r = random.nextInt(10);
        s1 += r * 6;
        result += r;
        r = random.nextInt(10);
        s1 += r * 8;
        result += r;
        r = s1 % 11 % 10;
        result += r;
        return result;
    }

    /**
     * КПП (код причины постановки на учет) состоит из 9 знаков:
     * <p>
     * 1-4-я цифры — код налогового органа, который осуществил постановку на учет организации или осуществил учет сведений в отношении организации;
     * 5-6-й знаки — причина постановки на учет (учета сведений), представляют собой цифры или заглавные буквы латинского алфавита от A до Z. Числовое значение двух знаков может принимать значение:
     * для российской организации — от 01 до 50 (01 — по месту ее нахождения);
     * для иностранной организации — от 51 до 99;
     * 7-9-я цифры — порядковый номер постановки на учет (учета сведений) в налоговом органе по соответствующему основанию.
     *
     * @return КПП
     */
    public static String randomKPP() {
        Random random = new Random();
        String result = "";
        for (int i = 9; i > 0; i--) {
            result += random.nextInt(10);
        }
        return result;
    }

    private static char vehicleRegNumberChars[] = new char[]{'А', 'В', 'Е', 'К', 'М', 'Н', 'О', 'Р', 'С', 'Т', 'У', 'Х'};
    private static int vehicleRegNumberCodes[] = new int[]{1, 2, 102, 702, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 113, 14, 15, 16, 116, 716, 17, 18, 19, 21, 121, 22, 122, 23, 93, 123, 193, 24, 84, 88, 124, 25, 125, 26, 126, 27, 28, 29, 30, 31, 32, 33, 34, 134, 35, 36, 136, 37, 38, 85, 138, 39, 91, 40, 41, 82, 42, 142, 43, 44, 45, 46, 47, 147, 48, 49, 50, 90, 150, 190, 750, 790, 51, 52, 152, 53, 54, 154, 55, 155, 56, 156, 57, 58, 59, 81, 159, 60, 61, 161, 761, 62, 63, 163, 763, 64, 164, 65, 66, 96, 196, 67, 68, 69, 70, 71, 72, 73, 173, 74, 174, 774, 75, 80, 76, 77, 97, 99, 177, 197, 199, 777, 797, 799, 78, 98, 178, 198, 79, 82, 777, 83, 86, 186, 87, 89, 92, 777, 94, 95};

    /**
     * Генерация случайного гос номера для ТС
     *
     * @return гос номер
     */
    public static String randomVehicleRegNumber() {
        String result = "";
        Random random = new Random();
        result += vehicleRegNumberChars[random.nextInt(vehicleRegNumberChars.length)];
        result += random.nextInt(10);
        result += random.nextInt(10);
        result += random.nextInt(10);
        result += vehicleRegNumberChars[random.nextInt(vehicleRegNumberChars.length)];
        result += vehicleRegNumberChars[random.nextInt(vehicleRegNumberChars.length)];
        final int code = vehicleRegNumberCodes[random.nextInt(vehicleRegNumberCodes.length)];
        if (code < 10) {
            result += '0';
        }
        result += code;
        return result;
    }

    /**
     * Получить случайную дату между началом и концом периода
     *
     * @param startDate  начало периода
     * @param finishDate конец периода
     * @return случайная дата
     */
    public static LocalDate getRandomDate(LocalDate startDate, LocalDate finishDate) {
        int dayPeriod = (int) ChronoUnit.DAYS.between(startDate, finishDate);
        SecureRandom rnd = new SecureRandom();
        int random = rnd.nextInt(dayPeriod);
        return startDate.plusDays(random);
    }

}
